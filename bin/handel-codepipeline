#!/usr/bin/env node
const yaml = require('js-yaml');
const fs = require('fs');
const cli = require('../lib/cli');

function printAndExit(msg) {
    console.log(msg)
    process.exit(1);
}

function printGeneralUsage() {
    let usageMsg = `Usage: handel-codepipeline <action>

Action:
check -- Checks the contents of your Handel file for errors.
deploy -- Deploys the given pipeline from your Handel-Codepipeline file.
delete -- Deletes the given pipeline from your AWS account.`;
    printAndExit(usageMsg);
}

function loadHandelCodePipelineFile() {
    try {
        var handelCodePipelineFile = yaml.safeLoad(fs.readFileSync('./handel-codepipeline.yml', 'utf8'));
        return handelCodePipelineFile;
    }
    catch (e) {
        if (e.code === 'ENOENT') {
            printAndExit(`No 'handel-codepipeline.yml' file found in this directory. You must run Handel in the directory containing the Handel file.`);
        }
        else if (e.name === 'YAMLException') {
            printAndExit(`Malformed 'handel-codepipeline.yml' file. Make sure your Handel file is a properly formatted YAML file. You're probably missing a space or two somewhere`);
        }
        else {
            printAndExit(`Unexpected error while loading 'handel-codepipeline.yml' file: ${e}`);
        }
    }
}

let handelCodePipelineFile = loadHandelCodePipelineFile();
let phase = process.argv[2];
switch (phase) {
    case "deploy":
        cli.deployAction(handelCodePipelineFile);
        break;
    case "check":
        cli.checkAction(handelCodePipelineFile);
        break;
    case "delete":
        cli.deleteAction(handelCodePipelineFile);
        break;
    default:
        printGeneralUsage();
}

